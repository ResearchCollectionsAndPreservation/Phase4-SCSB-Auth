buildscript {
	ext {
		springBootVersion = '2.3.1.RELEASE'
		set('springCloudVersion', "Hoxton.SR5")
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.sonarqube" version "2.8"
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.springframework.boot' version '2.3.1.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

//added to accept systemproperties while executing gradlew test cmd
test {
	systemProperties = System.properties
}


jar {
	archiveBaseName = 'phase4-scsb-auth'
	archiveVersion = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
	mavenCentral()
}


dependencies {
	compile fileTree(dir: '/data/commonjar', include: '*2.1.jar')
	implementation('commons-beanutils:commons-beanutils:1.9.4')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.data:spring-data-solr:4.1.7.RELEASE')
			{exclude module: 'solr-solrj'; exclude module: 'solr-data-commons'; exclude module: 'spring-data-jpa'}
	implementation('org.codehaus.jettison:jettison:1.4.1')
	implementation('org.springframework.data:spring-data-commons')
	implementation('org.springframework.data:spring-data-jpa')
	implementation('info.freelibrary:freelib-marc4j:2.6.12')
	implementation(group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0')
	implementation('io.springfox:springfox-swagger-ui:2.9.2')
	implementation('io.springfox:springfox-swagger2:2.9.2')
	implementation('org.apache.shiro:shiro-core:1.5.2')
	implementation('org.apache.shiro:shiro-spring:1.5.2')
	implementation('org.apache.shiro:shiro-spring-boot-web-starter:1.5.2')
	implementation('org.projectlombok:lombok:1.18.12')
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'net.logstash.logback:logstash-logback-encoder:6.4'
	annotationProcessor('org.projectlombok:lombok:1.18.12')
	testImplementation('org.projectlombok:lombok:1.18.12')
	testAnnotationProcessor('org.projectlombok:lombok:1.18.12')

	runtime('mysql:mysql-connector-java')
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.json:json:20200518'
	implementation 'com.google.code.gson:gson:2.8.6'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.17.0'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
	group = "Reporting"
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled = true
		html.destination file("${buildDir}/jacocoHtml")
	}
}

task scsbShiroJavadocs(type: Javadoc) {
	source = sourceSets.main.java
	classpath = configurations.compile
	options.addStringOption('Xdoclint:none', '-quiet')
	String home = System.getProperty("user.home");
	destinationDir =  new File(home+"/scsb-javadocs/scsb-shiro");
}

bootJar {
	layered()
}
